{"version":3,"sources":["packages/service-worker/service-worker.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","serviceWorker","common","core","rxjs","operators","this","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","ERR_SW_NOT_SUPPORTED","NgswCommChannel","controllerChanges","fromEvent","pipe","map","controller","currentController","defer","of","controllerWithChanges","concat","worker","filter","registration","switchMap","getRegistration","events","event","data","type","publish","connect","errorObservable","message","throwError","Error","postMessage","action","payload","take","tap","sw","toPromise","then","postMessageWithStatus","nonce","waitForStatus","Promise","all","generateNonce","Math","round","random","eventsOfType","nextEventOfType","status","error","get","enumerable","configurable","SwPush","_this","subscriptionChanges","Subject","isEnabled","messages","NEVER","notificationClicks","subscription","pushManager","workerDrivenSubscriptions","pm","getSubscription","merge","subscribe","pushData","statusNonce","PushSubscription","JSON","parse","stringify","requestSubscription","options","reject","pushOptions","userVisibleOnly","decodeBase64","serverPublicKey","replace","applicationServerKey","Uint8Array","ArrayBuffer","charCodeAt","sub","next","unsubscribe","success","input","atob","Injectable","SwUpdate","available","activated","checkForUpdate","activateUpdate","SwRegistrationOptions","SCRIPT","InjectionToken","ngswAppInitializer","injector","script","platformId","isPlatformBrowser","navigator","enabled","readyToRegister$","addEventListener","registrationStrategy","_a","__read","o","m","Symbol","iterator","e","ar","done","push","value","split","strategy","args","slice","delay","ApplicationRef","isStable","stable","register","scope","catch","err","console","ngswCommChannelFactory","opts","undefined","ServiceWorkerModule","ServiceWorkerModule_1","ngModule","providers","provide","useValue","useFactory","deps","PLATFORM_ID","APP_INITIALIZER","Injector","multi","NgModule","ɵangular_packages_service_worker_service_worker_a","ɵangular_packages_service_worker_service_worker_b","ɵangular_packages_service_worker_service_worker_c","ɵangular_packages_service_worker_service_worker_d"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.2.14+3.sha-d2f7315\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/service-worker', ['exports', '@angular/common', '@angular/core', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.serviceWorker = {}), global.ng.common, global.ng.core, global.rxjs, global.rxjs.operators));\n}(this, function (exports, common, core, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n    function errorObservable(message) {\n        return rxjs.defer(function () { return rxjs.throwError(new Error(message)); });\n    }\n    /**\n     * @publicApi\n     */\n    var NgswCommChannel = /** @class */ (function () {\n        function NgswCommChannel(serviceWorker) {\n            this.serviceWorker = serviceWorker;\n            if (!serviceWorker) {\n                this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n            }\n            else {\n                var controllerChangeEvents = rxjs.fromEvent(serviceWorker, 'controllerchange');\n                var controllerChanges = controllerChangeEvents.pipe(operators.map(function () { return serviceWorker.controller; }));\n                var currentController = rxjs.defer(function () { return rxjs.of(serviceWorker.controller); });\n                var controllerWithChanges = rxjs.concat(currentController, controllerChanges);\n                this.worker = controllerWithChanges.pipe(operators.filter(function (c) { return !!c; }));\n                this.registration = (this.worker.pipe(operators.switchMap(function () { return serviceWorker.getRegistration(); })));\n                var rawEvents = rxjs.fromEvent(serviceWorker, 'message');\n                var rawEventPayload = rawEvents.pipe(operators.map(function (event) { return event.data; }));\n                var eventsUnconnected = rawEventPayload.pipe(operators.filter(function (event) { return event && event.type; }));\n                var events = eventsUnconnected.pipe(operators.publish());\n                events.connect();\n                this.events = events;\n            }\n        }\n        NgswCommChannel.prototype.postMessage = function (action, payload) {\n            return this.worker\n                .pipe(operators.take(1), operators.tap(function (sw) {\n                sw.postMessage(__assign({ action: action }, payload));\n            }))\n                .toPromise()\n                .then(function () { return undefined; });\n        };\n        NgswCommChannel.prototype.postMessageWithStatus = function (type, payload, nonce) {\n            var waitForStatus = this.waitForStatus(nonce);\n            var postMessage = this.postMessage(type, payload);\n            return Promise.all([waitForStatus, postMessage]).then(function () { return undefined; });\n        };\n        NgswCommChannel.prototype.generateNonce = function () { return Math.round(Math.random() * 10000000); };\n        NgswCommChannel.prototype.eventsOfType = function (type) {\n            var filterFn = function (event) { return event.type === type; };\n            return this.events.pipe(operators.filter(filterFn));\n        };\n        NgswCommChannel.prototype.nextEventOfType = function (type) {\n            return this.eventsOfType(type).pipe(operators.take(1));\n        };\n        NgswCommChannel.prototype.waitForStatus = function (nonce) {\n            return this.eventsOfType('STATUS')\n                .pipe(operators.filter(function (event) { return event.nonce === nonce; }), operators.take(1), operators.map(function (event) {\n                if (event.status) {\n                    return undefined;\n                }\n                throw new Error(event.error);\n            }))\n                .toPromise();\n        };\n        Object.defineProperty(NgswCommChannel.prototype, \"isEnabled\", {\n            get: function () { return !!this.serviceWorker; },\n            enumerable: true,\n            configurable: true\n        });\n        return NgswCommChannel;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Subscribe and listen to\n     * [Web Push Notifications](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices)\n     * through Angular Service Worker.\n     *\n     * @usageNotes\n     *\n     * You can inject a `SwPush` instance into any component or service\n     * as a dependency.\n     *\n     * <code-example path=\"service-worker/push/module.ts\" region=\"inject-sw-push\" header=\"app.component.ts\"></code-example>\n     *\n     * To subscribe, call `SwPush.requestSubscription()`, which asks the user for permission.\n     * The call returns a `Promise` with a new\n     * [`PushSubscription`](https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription)\n     * instance.\n     *\n     * <code-example path=\"service-worker/push/module.ts\" region=\"subscribe-to-push\" header=\"app.component.ts\"></code-example>\n     *\n     * A request is rejected if the user denies permission, or if the browser\n     * blocks or does not support the Push API or ServiceWorkers.\n     * Check `SwPush.isEnabled` to confirm status.\n     *\n     * Invoke Push Notifications by pushing a message with the following payload.\n     *\n     * ```ts\n     * {\n     *   \"notification\": {\n     *     \"actions\": NotificationAction[],\n     *     \"badge\": USVString\n     *     \"body\": DOMString,\n     *     \"data\": any,\n     *     \"dir\": \"auto\"|\"ltr\"|\"rtl\",\n     *     \"icon\": USVString,\n     *     \"image\": USVString,\n     *     \"lang\": DOMString,\n     *     \"renotify\": boolean,\n     *     \"requireInteraction\": boolean,\n     *     \"silent\": boolean,\n     *     \"tag\": DOMString,\n     *     \"timestamp\": DOMTimeStamp,\n     *     \"title\": DOMString,\n     *     \"vibrate\": number[]\n     *   }\n     * }\n     * ```\n     *\n     * Only `title` is required. See `Notification`\n     * [instance properties](https://developer.mozilla.org/en-US/docs/Web/API/Notification#Instance_properties).\n     *\n     * While the subscription is active, Service Worker listens for\n     * [PushEvent](https://developer.mozilla.org/en-US/docs/Web/API/PushEvent)\n     * occurrences and creates\n     * [Notification](https://developer.mozilla.org/en-US/docs/Web/API/Notification)\n     * instances in response.\n     *\n     * Unsubscribe using `SwPush.unsubscribe()`.\n     *\n     * An application can subscribe to `SwPush.notificationClicks` observable to be notified when a user\n     * clicks on a notification. For example:\n     *\n     * <code-example path=\"service-worker/push/module.ts\" region=\"subscribe-to-notification-clicks\" header=\"app.component.ts\"></code-example>\n     *\n     * @see [Push Notifications](https://developers.google.com/web/fundamentals/codelabs/push-notifications/)\n     * @see [Angular Push Notifications](https://blog.angular-university.io/angular-push-notifications/)\n     * @see [MDN: Push API](https://developer.mozilla.org/en-US/docs/Web/API/Push_API)\n     * @see [MDN: Notifications API](https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API)\n     * @see [MDN: Web Push API Notifications best practices](https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices)\n     *\n     * @publicApi\n     */\n    var SwPush = /** @class */ (function () {\n        function SwPush(sw) {\n            var _this = this;\n            this.sw = sw;\n            this.subscriptionChanges = new rxjs.Subject();\n            if (!sw.isEnabled) {\n                this.messages = rxjs.NEVER;\n                this.notificationClicks = rxjs.NEVER;\n                this.subscription = rxjs.NEVER;\n                return;\n            }\n            this.messages = this.sw.eventsOfType('PUSH').pipe(operators.map(function (message) { return message.data; }));\n            this.notificationClicks =\n                this.sw.eventsOfType('NOTIFICATION_CLICK').pipe(operators.map(function (message) { return message.data; }));\n            this.pushManager = this.sw.registration.pipe(operators.map(function (registration) { return registration.pushManager; }));\n            var workerDrivenSubscriptions = this.pushManager.pipe(operators.switchMap(function (pm) { return pm.getSubscription(); }));\n            this.subscription = rxjs.merge(workerDrivenSubscriptions, this.subscriptionChanges);\n            this.subscription.subscribe(function (subscription) {\n                var pushData = {\n                    action: 'STATUS_PUSH',\n                    statusNonce: _this.sw.generateNonce(),\n                    subscription: null\n                };\n                if (typeof (PushSubscription) === 'function' && subscription instanceof PushSubscription) {\n                    pushData.subscription = JSON.parse(JSON.stringify(subscription));\n                }\n                _this.sw.postMessageWithStatus('STATUS_PUSH', pushData, pushData.statusNonce);\n            });\n        }\n        Object.defineProperty(SwPush.prototype, \"isEnabled\", {\n            /**\n             * True if the Service Worker is enabled (supported by the browser and enabled via\n             * `ServiceWorkerModule`).\n             */\n            get: function () { return this.sw.isEnabled; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Subscribes to Web Push Notifications,\n         * after requesting and receiving user permission.\n         *\n         * @param options An object containing the `serverPublicKey` string.\n         * @returns A Promise that resolves to the new subscription object.\n         */\n        SwPush.prototype.requestSubscription = function (options) {\n            var _this = this;\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var pushOptions = { userVisibleOnly: true };\n            var key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n            var applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n            for (var i = 0; i < key.length; i++) {\n                applicationServerKey[i] = key.charCodeAt(i);\n            }\n            pushOptions.applicationServerKey = applicationServerKey;\n            return this.pushManager.pipe(operators.switchMap(function (pm) { return pm.subscribe(pushOptions); }), operators.take(1))\n                .toPromise()\n                .then(function (sub) {\n                _this.subscriptionChanges.next(sub);\n                return sub;\n            });\n        };\n        /**\n         * Unsubscribes from Service Worker push notifications.\n         *\n         * @returns A Promise that is resolved when the operation succeeds, or is rejected if there is no\n         *          active subscription or the unsubscribe operation fails.\n         */\n        SwPush.prototype.unsubscribe = function () {\n            var _this = this;\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var doUnsubscribe = function (sub) {\n                if (sub === null) {\n                    throw new Error('Not subscribed to push notifications.');\n                }\n                return sub.unsubscribe().then(function (success) {\n                    if (!success) {\n                        throw new Error('Unsubscribe failed!');\n                    }\n                    _this.subscriptionChanges.next(null);\n                });\n            };\n            return this.subscription.pipe(operators.take(1), operators.switchMap(doUnsubscribe)).toPromise();\n        };\n        SwPush.prototype.decodeBase64 = function (input) { return atob(input); };\n        SwPush = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [NgswCommChannel])\n        ], SwPush);\n        return SwPush;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Subscribe to update notifications from the Service Worker, trigger update\n     * checks, and forcibly activate updates.\n     *\n     * @publicApi\n     */\n    var SwUpdate = /** @class */ (function () {\n        function SwUpdate(sw) {\n            this.sw = sw;\n            if (!sw.isEnabled) {\n                this.available = rxjs.NEVER;\n                this.activated = rxjs.NEVER;\n                return;\n            }\n            this.available = this.sw.eventsOfType('UPDATE_AVAILABLE');\n            this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED');\n        }\n        Object.defineProperty(SwUpdate.prototype, \"isEnabled\", {\n            /**\n             * True if the Service Worker is enabled (supported by the browser and enabled via\n             * `ServiceWorkerModule`).\n             */\n            get: function () { return this.sw.isEnabled; },\n            enumerable: true,\n            configurable: true\n        });\n        SwUpdate.prototype.checkForUpdate = function () {\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var statusNonce = this.sw.generateNonce();\n            return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce: statusNonce }, statusNonce);\n        };\n        SwUpdate.prototype.activateUpdate = function () {\n            if (!this.sw.isEnabled) {\n                return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n            }\n            var statusNonce = this.sw.generateNonce();\n            return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce: statusNonce }, statusNonce);\n        };\n        SwUpdate = __decorate([\n            core.Injectable(),\n            __metadata(\"design:paramtypes\", [NgswCommChannel])\n        ], SwUpdate);\n        return SwUpdate;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Token that can be used to provide options for `ServiceWorkerModule` outside of\n     * `ServiceWorkerModule.register()`.\n     *\n     * You can use this token to define a provider that generates the registration options at runtime,\n     * for example via a function call:\n     *\n     * {@example service-worker/registration-options/module.ts region=\"registration-options\"\n     *     header=\"app.module.ts\"}\n     *\n     * @publicApi\n     */\n    var SwRegistrationOptions = /** @class */ (function () {\n        function SwRegistrationOptions() {\n        }\n        return SwRegistrationOptions;\n    }());\n    var SCRIPT = new core.InjectionToken('NGSW_REGISTER_SCRIPT');\n    function ngswAppInitializer(injector, script, options, platformId) {\n        var initializer = function () {\n            if (!(common.isPlatformBrowser(platformId) && ('serviceWorker' in navigator) &&\n                options.enabled !== false)) {\n                return;\n            }\n            // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n            // becomes active. This allows the SW to initialize itself even if there is no application\n            // traffic.\n            navigator.serviceWorker.addEventListener('controllerchange', function () {\n                if (navigator.serviceWorker.controller !== null) {\n                    navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });\n                }\n            });\n            var readyToRegister$;\n            if (typeof options.registrationStrategy === 'function') {\n                readyToRegister$ = options.registrationStrategy();\n            }\n            else {\n                var _a = __read((options.registrationStrategy || 'registerWhenStable').split(':')), strategy = _a[0], args = _a.slice(1);\n                switch (strategy) {\n                    case 'registerImmediately':\n                        readyToRegister$ = rxjs.of(null);\n                        break;\n                    case 'registerWithDelay':\n                        readyToRegister$ = rxjs.of(null).pipe(operators.delay(+args[0] || 0));\n                        break;\n                    case 'registerWhenStable':\n                        var appRef = injector.get(core.ApplicationRef);\n                        readyToRegister$ = appRef.isStable.pipe(operators.filter(function (stable) { return stable; }));\n                        break;\n                    default:\n                        // Unknown strategy.\n                        throw new Error(\"Unknown ServiceWorker registration strategy: \" + options.registrationStrategy);\n                }\n            }\n            // Don't return anything to avoid blocking the application until the SW is registered.\n            // Catch and log the error if SW registration fails to avoid uncaught rejection warning.\n            readyToRegister$.pipe(operators.take(1)).subscribe(function () { return navigator.serviceWorker.register(script, { scope: options.scope })\n                .catch(function (err) { return console.error('Service worker registration failed with:', err); }); });\n        };\n        return initializer;\n    }\n    function ngswCommChannelFactory(opts, platformId) {\n        return new NgswCommChannel(common.isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker :\n            undefined);\n    }\n    /**\n     * @publicApi\n     */\n    var ServiceWorkerModule = /** @class */ (function () {\n        function ServiceWorkerModule() {\n        }\n        ServiceWorkerModule_1 = ServiceWorkerModule;\n        /**\n         * Register the given Angular Service Worker script.\n         *\n         * If `enabled` is set to `false` in the given options, the module will behave as if service\n         * workers are not supported by the browser, and the service worker will not be registered.\n         */\n        ServiceWorkerModule.register = function (script, opts) {\n            if (opts === void 0) { opts = {}; }\n            return {\n                ngModule: ServiceWorkerModule_1,\n                providers: [\n                    { provide: SCRIPT, useValue: script },\n                    { provide: SwRegistrationOptions, useValue: opts },\n                    {\n                        provide: NgswCommChannel,\n                        useFactory: ngswCommChannelFactory,\n                        deps: [SwRegistrationOptions, core.PLATFORM_ID]\n                    },\n                    {\n                        provide: core.APP_INITIALIZER,\n                        useFactory: ngswAppInitializer,\n                        deps: [core.Injector, SCRIPT, SwRegistrationOptions, core.PLATFORM_ID],\n                        multi: true,\n                    },\n                ],\n            };\n        };\n        var ServiceWorkerModule_1;\n        ServiceWorkerModule = ServiceWorkerModule_1 = __decorate([\n            core.NgModule({\n                providers: [SwPush, SwUpdate],\n            })\n        ], ServiceWorkerModule);\n        return ServiceWorkerModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_service_worker_service_worker_a = NgswCommChannel;\n    exports.ɵangular_packages_service_worker_service_worker_b = SCRIPT;\n    exports.ɵangular_packages_service_worker_service_worker_c = ngswAppInitializer;\n    exports.ɵangular_packages_service_worker_service_worker_d = ngswCommChannelFactory;\n    exports.ServiceWorkerModule = ServiceWorkerModule;\n    exports.SwRegistrationOptions = SwRegistrationOptions;\n    exports.SwPush = SwPush;\n    exports.SwUpdate = SwUpdate;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=service-worker.umd.js.map\n"]}